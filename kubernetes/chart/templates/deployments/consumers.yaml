{{- range $key, $value := $.Values.consumers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-consumer-{{ $key }}
  labels:
    app: {{ $.Release.Name }}-consumer-{{ $key }}
spec:
  replicas: {{ $value.replicas.min }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-consumer-{{ $key }}
  template:
    metadata:
      name: {{ $.Release.Name }}-consumer-{{ $key }}
      labels:
        app: {{ $.Release.Name }}-consumer-{{ $key }}
    spec:
      terminationGracePeriodSeconds: {{ $value.terminationGracePeriodSeconds }}
      restartPolicy: Always
      containers:
        - name: {{ $.Release.Name }}-consumer-{{ $key }}
          image: "{{ $.Values.image.name }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ $.Values.image.policy }}
          ports:  # For Prometheus metrics
            - containerPort: {{ $.Values.service.port.container }}
              name: {{ $.Values.service.port.name }}
              protocol: TCP
          command:
            - /bin/sh
            - -c
          args:
            - python main.py consumer {{ $key }}
          {{- if not $value.debug.enabled }}
          livenessProbe:
            exec:
              command: [ "/bin/sh", "-c", "test -f $LIVENESS_CONSUMERS_FILE" ]
          readinessProbe:
            exec:
              command: [ "/bin/sh", "-c", "test -f $READINESS_CONSUMERS_FILE" ]
          {{- end }}
          resources:
            {{- toYaml $value.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ $.Release.Name }}
            - secretRef:
                name: {{ $.Values.secretName }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            {{- if $value.debug.enabled }}
            - name: DEBUG
              value: "true"
            {{- end }}
---
{{- end }}
